name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Code Checkout and Setup
  setup:
    name: Setup Environment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # Dies checkt den aktuellen Code aus.

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
        # Node.js Version wird eingerichtet.

  # Job 2: Lint and Test
  lint_and_test:
    name: Lint and Test
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install
        # Installiert alle npm-Pakete.

      - name: Run Linter
        run: npm run lint
        # Führt ESLint aus.

      - name: Start development server
        run:  npm run dev &
            sleep 10

      - name: Run vitest Tests
        run: npm test

      - name: Run Cypress Tests
        run: npx cypress run

      - name: Upload Test Results
        if: always() # Ergebnisse hochladen, auch bei Fehlern.
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./.github/workflows/test-results

  # Job 3: Build Project
  build:
    name: Build Project
    needs: lint_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build
        # Führt den Build aus.

  # Job 4: Generate Report
  report:
    name: Generate Report
    needs: [lint_and_test, build]
    runs-on: ubuntu-latest
    if: failure() # Läuft nur bei Fehlern.

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Output Error Message
        run: echo "Pipeline failed. Check the logs for details."
        # Gibt spezifische Fehlermeldungen aus.
